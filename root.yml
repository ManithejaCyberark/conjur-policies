# conjur policy load root root.yml

# Users
- &users
  - !user joe
  - !user rob
  - !user andrew
  - !user evan
  - !host refactr

# Groups
- &groups
  - !group admins

# Grants
- !grant
  role: !user admin
  members: !group admins
- !grant
  role: !group admins
  members: *users
- !grant
  role: !group DemoVault/LOB_CICD/D-Nix-AWSEC2-Keypairs/delegation/consumers
  members:
    - !host tower/ops-team-1
    - !host tower/ops-team-2
- !grant
  role: !group DemoVault/LOB_CICD/D-Win-SvcAccts/delegation/consumers
  members:
    - !host jenkins/controller
    - !host conjur/authn-jwt/jenkins/Test-Global-Secret-Retrieval
    - !host conjur/authn-jwt/jenkins/Test-Secret-Retrieval-1
- !grant
  role: !group DemoVault/LOB_CICD/D-AWS-AccessKeys/delegation/consumers
  members:
    - !host jenkins/controller
    - !host jenkins/dev-team-1
    - !host jenkins/dev-team-2
    - !host tower/ops-team-1
    - !host tower/ops-team-2
    - !host conjur/authn-jwt/jenkins/Test-Global-Secret-Retrieval
- !grant
  role: !group DemoVault-admins
  members:
    - !host refactr
- !grant
  role: !policy root
  members:
    - !host refactr
- !permit
  role: !host refactr
  privileges: [ read, execute, update ]
  resource: !policy root

# Hosts
- !host pki-service # host/pki-service - for ownership of `pki` policy

# Policies
# PKI Service policy branch
- !policy
  id: pki
  owner: !host pki-service

# Ansible Tower policy branch
- !policy
  id: tower

# Postgres Secretless policy branch
- !policy
  id: secretless-demo

# Jenkins policy branch
- !policy
  id: jenkins
